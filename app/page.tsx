
'use client'

import { createClientComponentClient } from '@supabase/auth-helpers-nextjs'
import { useEffect, useState } from 'react'
import { RadioGroup } from '@headlessui/react'
import { CheckCircleIcon } from '@heroicons/react/24/outline'
import greenOnionIcon from "./assets/spring-onion.png"
import seaweedIcon from "./assets/seaweed.png"
import garlicIcon from "./assets/garlic.png"
import mushroomIcon from "./assets/mushroom.png"
import cabbageIcon from "./assets/cabbage.png"
import { useRouter } from 'next/navigation'

//import sprite from './assets/sprite2.svg'

export default function Page() {
  let router = useRouter()
  const [loading, setLoading] = useState(false)
  const [open, setOpen] = useState(false)
  const [errorText, setErrorText] = useState("")

  const bowlList = [
    { id: "bowl-original", name: 'Original King', description: '' },
    { id: "bowl-red", name: 'Red King', description: 'Spicy' },
    { id: "bowl-black", name: 'Black King', description: 'Squid Ink' },
    { id: "bowl-green", name: 'Green King', description: 'Basil' },
    { id: "bowl-veggie", name: 'Veggie King', description: 'Non-vegan. Contains milk.' },
  ]
  const veggieList = [
    { id: "veggie-beauty", name: 'Green Onion', description: 'beauty', icon: greenOnionIcon },
    { id: "veggie-usefulness", name: 'Mushroom', description: 'usefulness', icon: mushroomIcon },
    { id: "veggie-curiosity", name: 'Seaweed', description: 'curiosity', icon: seaweedIcon },
    { id: "veggie-humor", name: 'Cabbage', description: 'humor', icon: cabbageIcon },
    { id: "veggie-sentiment", name: 'Garlic', description: 'sentiment', icon: garlicIcon },
  ]

  const sauceList = [
    { id: "sauce-none", name: 'None', value: 0 },
    { id: "sauce-mild", name: 'Mild', value: 1 },
    { id: "sauce-medium", name: 'Medium', value: 2 },
    { id: "sauce-spicy", name: 'Spicy', value: 3 },
  ]

  const sizeList = [
    { id: "size-medium", name: 'Medium', value: 0 },
    { id: "size-large", name: 'Large', value: 1 },

  ]

  const supabase = createClientComponentClient()


  async function handleSubmit(event: any) {
    event.preventDefault()
    setLoading(true)
    const formData = new FormData(event.target)
    const d = Object.fromEntries(formData)

    // if user has already missed email, name, bowl, sauce, size, alert them 
    if (!d.email || !d.name || !d.bowl || !d.sauce || !d.size) {
      alert("Please fill out all required fields.")
      setLoading(false)
      setErrorText("Please fill out all required fields.")
      return
    }

    // if data has less than 1 ormore than 3 veggie keys, alert user 
    const veggieKeys = Object.keys(d).filter((key) => key.includes("veggie"))
    if (veggieKeys.length == 0 || veggieKeys.length > 3) {
      alert("Please select at least 1 vegetable, but no more than 3 vegetables.")
      setErrorText("Please select at least 1 vegetable, but no more than 3 vegetables.")
      setLoading(false)
      return
    }

    console.log({ d })
    const { data, error } = await supabase
      .from('orders')
      .upsert({ email: d.email, name: d.name, bowl_type: d.bowl, sauce: d.sauce, size: d.size, beauty: d["veggie-beauty"], usefulness: d["veggie-usefulness"], curiosity: d["veggie-curiosity"], humor: d["veggie-humor"], sentiment: d["veggie-sentiment"], egg: d.egg }).select()
    if (!error) {
      router.push(`/confirmation?id=${data[0].id}&name=${data[0].name}`)
      setLoading(false)
    }
  }

  function classNames(...classes: any[]) {
    return classes.filter(Boolean).join(' ')
  }

  return (
    <div className="max-w-full overflow-x-hidden w-64 sm:w-[500px] py-12">
      {open ? (
      <form onSubmit={handleSubmit}>
        <div id="form-body" className="border-8 border-black">
          <div id="header" className="flex items-center flex-col p-4 gap-2 outline outline-1">
            <h1 className="title text-2xl sm:text-3xl text-center text-white font-title">OMOTENASHI SHEET</h1>
            <h2 className="text-base font-serif text-gray-900 uppercase text-center">Customize your favorite ramen.<br />Circle how you like it!</h2>
            <p className="text-sm text-gray-600 text-center">
              All items are virtual only.<br />Not available for take out or physical consumption.
            </p>
          </div>

          <div id="flavor">
            <fieldset>
              <legend className="sr-only">Ramen Flavor</legend>
              <div className="grid grid-cols-[25px_2fr_2fr] grid-rows-3 border-2 border-black justify-items-center items-center">
                <div className="flex row-span-3 w-full h-full outline justify-items-center items-center">
                  <h2 className="vertical text-xs tracking-tighter uppercase font-semibold m-1">Ramen Flavor</h2>
                </div>
                {
                  bowlList.map((bowl) => {
                    return (
                      <div key={bowl.id} className="radio flex w-full h-full outline flex-row gap-x-3 p-3 justify-center items-center">
                        <input
                          id={bowl.id}
                          value={bowl.id}
                          name="bowl"
                          type="radio"
                          className=""
                        />
                        <label htmlFor={bowl.id} className="relative cursor-pointer">
                          <svg className="circle tall-circle sm:hidden" viewBox="0 0 120 112">
                            <path fill="none" stroke="#e2231b" strokeMiterlimit="10" d="M49.577,10.792C47.697,10.897 45.819,11.064 43.964,11.316C39.685,11.899 35.534,12.937 31.777,14.715C27.248,16.857 23.651,19.665 20.665,22.969C16.141,27.977 13.024,34.125 10.198,40.822C8.797,44.142 6.743,47.478 5.506,50.984C4.96,52.529 4.572,54.106 4.463,55.73C4.359,57.267 4.402,58.785 4.518,60.297C4.692,62.553 5.031,64.793 5.286,67.058C5.626,70.076 5.904,73.067 6.325,76.043C6.606,78.031 6.949,80.012 7.421,81.99C8.398,86.09 10.377,90.281 13.16,93.944C15.841,97.476 19.268,100.518 23.261,102.518C27.888,104.837 31.817,106.208 35.276,106.991C40.301,108.128 44.333,108.025 48.067,107.772C51.282,107.554 55.466,107.126 59.258,106.45C62.092,105.946 64.709,105.302 66.549,104.508C67.695,104.013 68.991,103.331 70.36,102.542C70.522,102.527 70.684,102.51 70.845,102.493C72.181,102.352 73.526,102.165 74.873,101.954C77.999,101.463 81.134,100.838 84.179,100.334C85.708,100.081 87.466,99.635 89.184,99.072C90.909,98.508 92.593,97.825 93.961,97.105C96.635,95.697 98.164,95.031 99.497,94.219C100.559,93.572 101.5,92.834 102.781,91.567C103.913,90.449 105.028,89.413 105.927,88.057C106.7,86.891 107.314,85.492 107.642,83.611C107.677,83.409 107.542,83.217 107.34,83.182C107.138,83.147 106.946,83.282 106.91,83.484C106.604,85.245 106.031,86.555 105.309,87.648C104.441,88.961 103.359,89.963 102.266,91.048C101.039,92.266 100.139,92.979 99.12,93.603C97.799,94.411 96.282,95.075 93.63,96.478C92.295,97.185 90.651,97.854 88.966,98.409C87.285,98.964 85.563,99.405 84.066,99.656C81.024,100.167 77.892,100.798 74.769,101.295C73.757,101.456 72.746,101.603 71.74,101.727C75.663,99.36 79.955,96.376 82.932,94.565C83.131,94.444 83.325,94.322 83.514,94.2C84.779,93.655 86.01,93.104 87.195,92.558C90.651,90.966 94.461,88.888 97.715,86.299C99.923,84.543 101.875,82.551 103.291,80.319C105.828,76.32 106.983,71.808 107.391,67.128C107.996,60.193 106.957,52.89 106.37,46.366C106.223,44.738 106.196,43.11 106.174,41.484C106.457,40 106.71,38.512 106.879,37.028C107.105,35.051 107.182,33.081 106.988,31.137C106.839,29.644 106.477,28.189 106.016,26.757C105.335,24.641 104.439,22.576 103.714,20.512C103.059,18.649 102.375,16.603 101.304,14.849C100.572,13.65 99.659,12.588 98.46,11.804C95.391,9.8 91.996,8.698 88.462,8.1C83.24,7.218 77.717,7.44 72.522,7.445C69.58,7.447 66.676,7.674 63.792,8.051C59.471,8.616 55.197,9.516 50.918,10.493C50.473,10.595 50.025,10.694 49.577,10.792ZM40.609,12.726C37.643,13.319 34.778,14.185 32.114,15.432C26.514,18.053 22.36,21.717 19.026,26.086C15.668,30.485 13.139,35.596 10.801,41.077C9.591,43.914 7.899,46.759 6.656,49.716C5.832,51.675 5.206,53.682 5.058,55.771C4.952,57.279 4.991,58.769 5.101,60.253C5.267,62.502 5.599,64.737 5.846,66.996C6.177,70.009 6.442,72.996 6.857,75.968C7.132,77.94 7.473,79.905 7.94,81.867C8.899,85.899 10.845,90.021 13.581,93.625C16.214,97.092 19.578,100.08 23.499,102.043C28.08,104.337 31.97,105.694 35.394,106.468C40.359,107.589 44.342,107.482 48.03,107.231C51.229,107.013 55.39,106.585 59.162,105.911C61.948,105.413 64.521,104.783 66.33,104.001C67.161,103.642 68.072,103.183 69.032,102.655C67.932,102.736 66.828,102.788 65.724,102.824C61.755,102.95 57.765,102.853 53.813,103.082C49.974,103.305 46.016,103.755 42.14,103.563C39.521,103.434 36.939,103.012 34.456,102.038C30.291,100.404 27.11,98.015 24.599,95.096C20.779,90.656 18.512,84.986 16.687,78.884C15.944,76.403 15.041,73.981 14.268,71.515C13.935,70.453 13.626,69.383 13.364,68.297C13.184,67.551 13.065,66.801 12.978,66.048C12.779,64.312 12.755,62.561 12.554,60.815C12.104,56.909 12.018,53.087 12.367,49.303C12.715,45.526 13.497,41.787 14.784,38.045C15.384,36.298 16.129,34.628 16.998,33.025C17.867,31.423 18.859,29.888 19.956,28.41C21.982,25.679 24.065,22.893 26.489,20.481C28.117,18.862 29.898,17.411 31.918,16.257C34.63,14.708 37.558,13.566 40.609,12.726ZM40.571,13.273C37.624,14.098 34.798,15.209 32.175,16.708C30.196,17.839 28.451,19.262 26.856,20.85C24.45,23.244 22.385,26.011 20.375,28.72C19.293,30.179 18.313,31.693 17.457,33.274C16.602,34.851 15.869,36.495 15.277,38.215C14.005,41.917 13.232,45.615 12.888,49.351C12.543,53.099 12.63,56.886 13.077,60.754C13.278,62.5 13.302,64.251 13.502,65.988C13.587,66.72 13.703,67.448 13.878,68.173C14.137,69.248 14.443,70.306 14.773,71.357C15.548,73.825 16.454,76.248 17.2,78.73C18.701,83.716 20.495,88.413 23.213,92.366C25.912,96.29 29.524,99.48 34.671,101.489C37.095,102.435 39.614,102.839 42.169,102.96C46.024,103.144 49.959,102.687 53.776,102.459C57.733,102.222 61.729,102.311 65.702,102.177C67.273,102.124 68.84,102.036 70.401,101.878C70.716,101.694 71.035,101.505 71.357,101.311C74.417,99.467 77.71,97.238 80.434,95.478C77.803,96.527 75.068,97.503 72.32,98.295C68.792,99.311 65.242,100.026 61.858,100.206C55.616,100.541 48.944,99.391 42.726,97.056C36.5,94.718 30.727,91.192 26.301,86.768C24.982,85.452 23.645,84.161 22.459,82.745C21.664,81.798 20.937,80.794 20.327,79.69C19.076,77.428 18.328,75.178 17.889,72.892C17.227,69.435 17.275,65.892 17.368,62.089C17.436,59.332 17.35,56.539 17.433,53.765C17.468,52.569 17.535,51.377 17.658,50.192C17.853,48.32 18.168,46.455 18.553,44.6C19.128,41.828 19.857,39.079 20.568,36.365C21.066,34.464 21.61,32.606 22.344,30.818C22.833,29.626 23.407,28.464 24.107,27.341C25.991,24.32 28.53,21.425 31.429,18.958C34.229,16.575 37.365,14.591 40.571,13.273ZM105.715,40.729C105.696,39.581 105.67,38.434 105.598,37.288C105.517,36.005 105.376,34.723 105.119,33.443C104.68,31.256 103.769,28.762 102.57,26.417C101.374,24.08 99.893,21.89 98.302,20.302C97.515,19.515 96.643,18.838 95.723,18.229C94.331,17.307 92.829,16.542 91.34,15.799C88.978,14.62 86.517,13.482 83.982,12.611C82.294,12.032 80.574,11.571 78.826,11.298C77.27,11.055 75.697,10.943 74.117,10.896C71.738,10.824 69.347,10.899 66.984,10.899C66.124,10.9 65.252,10.9 64.372,10.902C66.369,11.113 69.703,11.612 72.786,12.515C75.243,13.235 77.538,14.219 78.915,15.496C79.117,15.684 79.129,16 78.941,16.202C78.753,16.404 78.436,16.416 78.234,16.228C76.953,15.03 74.802,14.128 72.511,13.447C68.496,12.251 64.041,11.755 62.84,11.711C58.163,11.539 53.123,11.402 48.138,11.751C47.579,11.827 47.022,11.909 46.466,11.998C45.977,12.112 45.488,12.23 45.001,12.355C43.677,12.696 42.369,13.09 41.097,13.589C37.815,14.878 34.595,16.884 31.73,19.312C28.861,21.742 26.347,24.594 24.48,27.574C23.79,28.674 23.225,29.813 22.742,30.982C22.011,32.751 21.469,34.589 20.971,36.472C20.256,39.177 19.522,41.917 18.943,44.682C18.557,46.522 18.239,48.374 18.041,50.233C17.916,51.407 17.848,52.59 17.81,53.777C17.721,56.55 17.801,59.342 17.727,62.098C17.626,65.876 17.567,69.394 18.218,72.83C18.645,75.084 19.379,77.303 20.608,79.535C21.207,80.622 21.92,81.61 22.7,82.544C23.878,83.955 25.206,85.241 26.515,86.553C30.911,90.951 36.642,94.461 42.829,96.783C49.007,99.102 55.639,100.236 61.841,99.897C65.203,99.714 68.728,98.999 72.23,97.984C75.575,97.015 78.9,95.772 82.041,94.455C82.246,94.327 82.446,94.204 82.64,94.086C85.248,92.497 86.896,90.813 88.216,88.978C90.27,86.122 91.54,82.908 94.343,79.14C95.861,77.099 97.363,75.079 98.691,72.947C99.57,71.534 100.373,70.072 101.053,68.522C101.658,67.143 102.095,65.758 102.419,64.365C102.753,62.928 102.969,61.482 103.126,60.025C103.366,57.803 103.471,55.557 103.656,53.279C103.733,52.318 103.825,51.351 103.946,50.377C104.339,47.229 105.119,43.985 105.715,40.729ZM105.769,43.532C105.297,45.867 104.814,48.183 104.53,50.45C104.409,51.415 104.318,52.373 104.24,53.326C104.054,55.61 103.947,57.861 103.706,60.088C103.545,61.568 103.325,63.037 102.984,64.497C102.651,65.924 102.203,67.342 101.583,68.754C100.891,70.33 100.074,71.816 99.179,73.251C97.842,75.396 96.33,77.428 94.802,79.481C91.999,83.245 90.729,86.455 88.675,89.309C87.684,90.685 86.514,91.979 84.912,93.212C85.638,92.889 86.351,92.564 87.049,92.242C90.478,90.655 94.259,88.587 97.486,86.011C99.657,84.278 101.578,82.316 102.97,80.115C105.466,76.166 106.595,71.711 106.989,67.094C107.58,60.181 106.529,52.906 105.932,46.406C105.844,45.448 105.798,44.49 105.769,43.532ZM106.107,38.368C106.175,37.899 106.237,37.429 106.29,36.961C106.511,35.026 106.587,33.098 106.397,31.196C106.252,29.745 105.897,28.331 105.449,26.939C104.769,24.829 103.875,22.768 103.151,20.71C102.51,18.884 101.845,16.877 100.796,15.159C100.11,14.036 99.259,13.036 98.135,12.301C95.137,10.339 91.817,9.264 88.365,8.676C83.175,7.792 77.685,8.006 72.522,8.001C69.604,7.999 66.723,8.22 63.862,8.588C60.033,9.081 56.241,9.837 52.45,10.677C53.085,10.661 53.72,10.65 54.353,10.645C58.656,10.386 62.941,10.386 66.984,10.386C69.352,10.387 71.749,10.312 74.133,10.384C75.733,10.432 77.328,10.547 78.905,10.793C80.682,11.071 82.432,11.539 84.147,12.13C86.703,13.01 89.182,14.162 91.562,15.354C93.068,16.109 94.587,16.886 95.994,17.821C96.94,18.449 97.836,19.148 98.645,19.959C100.265,21.581 101.776,23.816 102.991,26.202C104.208,28.589 105.129,31.127 105.572,33.353C105.831,34.653 105.972,35.956 106.052,37.26C106.075,37.629 106.093,37.999 106.107,38.368Z" />
                          </svg>
                          <svg className="circle big-circle hidden sm:block" viewBox="0 0 160 64">
                            <path fill="none" stroke="#e2231b" strokeMiterlimit="10" d="M14.578,36.821C13.386,38.543 12.377,40.349 11.811,42.216C10.989,44.925 11.087,47.764 12.886,50.671C13.662,51.926 14.707,52.703 15.896,53.211C17.628,53.95 19.669,54.109 21.6,54.368C22.48,54.486 23.352,54.574 24.217,54.635C28.796,57.489 34.516,58.76 40.301,58.466C41.615,58.399 42.93,58.291 44.244,58.149C45.956,58.344 47.676,58.426 49.399,58.427C54.197,58.432 59.02,57.815 63.773,57.299C66.983,56.95 70.201,56.662 73.424,56.408C80.947,55.817 88.494,55.413 96.009,54.856C99.447,54.602 102.87,54.302 106.289,53.973C109.708,53.644 113.123,53.287 116.549,52.916C117.463,52.817 118.375,52.702 119.285,52.578C120.644,52.393 122,52.19 123.362,51.999L125.484,51.733C125.695,51.707 126.216,51.64 126.357,51.608C126.467,51.583 126.534,51.543 126.561,51.526C126.706,51.432 126.758,51.314 126.784,51.23C126.833,51.068 126.813,50.912 126.707,50.764C126.686,50.734 126.567,50.535 126.217,50.535C126.138,50.535 126.063,50.552 125.995,50.583C125.813,50.609 125.483,50.656 125.351,50.672L123.211,50.94C121.851,51.137 120.497,51.345 119.141,51.537C118.241,51.664 117.339,51.784 116.434,51.887C113.015,52.277 109.606,52.655 106.193,53.003C102.783,53.351 99.369,53.67 95.939,53.944C88.426,54.543 80.881,54.992 73.36,55.624C70.131,55.895 66.907,56.199 63.691,56.564C58.966,57.101 54.171,57.74 49.398,57.759C48.766,57.762 48.134,57.753 47.503,57.732C48.306,57.614 49.107,57.486 49.908,57.35C57.3,56.089 64.662,54.098 71.922,52.737C76.829,51.81 81.744,50.976 86.664,50.189C98.158,48.35 109.679,46.775 121.196,44.938C126.183,44.142 131.614,43.276 136.709,41.683C140.146,40.608 143.43,39.201 146.325,37.265C148.136,36.052 149.954,34.565 151.005,32.696C151.709,31.444 152.072,30.021 151.865,28.395C151.657,26.749 150.983,25.223 150.045,23.836C148.664,21.793 146.71,20.053 144.846,18.679C141.726,16.379 138.21,14.614 134.519,13.201C133.715,12.893 132.902,12.603 132.085,12.327C128.795,10.908 125.427,9.854 122.696,8.994C121.432,8.596 120.177,8.228 118.914,7.892C117.65,7.556 116.377,7.253 115.077,6.986C109.825,5.906 104.577,4.972 99.296,4.372C94.011,3.772 88.693,3.507 83.304,3.767C75.053,4.165 66.83,5.713 58.805,8.004C50.781,10.294 42.955,13.325 35.497,16.688C29.538,19.376 22.589,22.588 18.397,27.506C16.196,30.088 14.746,33.137 14.578,36.821ZM32.81,54.498C32.209,54.551 31.607,54.598 31.005,54.635C29.236,54.745 27.457,54.783 25.655,54.714C29.927,57.045 35.072,58.064 40.267,57.795C40.659,57.775 41.052,57.751 41.444,57.723C40.899,57.618 40.354,57.5 39.811,57.367C37.771,56.867 35.235,55.882 32.81,54.498ZM135.388,13.91C136.52,14.515 137.61,15.175 138.625,15.897C141.968,18.274 144.506,21.327 145.107,25.32C145.832,30.143 143.454,33.579 139.828,36.077C134.658,39.638 126.934,41.278 122.272,42.363C115.073,44.04 107.772,45.383 100.428,46.524C89.428,48.233 78.334,49.491 67.353,50.742C62.136,51.338 56.895,51.623 51.667,52.105C49.433,52.311 47.202,52.554 44.976,52.872C41.184,53.417 37.518,54.027 33.846,54.4C35.989,55.527 38.169,56.334 39.957,56.763C41.331,57.092 42.712,57.327 44.097,57.486C45.998,57.281 47.897,57.005 49.794,56.681C57.182,55.418 64.54,53.428 71.797,52.067C76.712,51.151 81.635,50.326 86.563,49.552C98.063,47.745 109.589,46.211 121.113,44.411C126.079,43.635 131.489,42.794 136.566,41.225C139.965,40.175 143.214,38.799 146.079,36.896C147.839,35.727 149.614,34.298 150.639,32.489C151.305,31.313 151.651,29.976 151.463,28.445C151.267,26.861 150.621,25.391 149.722,24.053C148.372,22.043 146.454,20.331 144.626,18.977C141.817,16.895 138.685,15.248 135.388,13.91ZM46.818,15.905C43.245,16.944 39.723,18.186 36.362,19.685C29.795,22.615 23.843,26.527 19.339,31.82C17.982,33.415 16.497,35.128 15.21,36.937C15.168,37.98 15.234,39.075 15.419,40.227C16.41,46.406 19.718,50.941 24.218,53.859C24.404,53.979 24.592,54.097 24.782,54.212C26.875,54.344 28.933,54.324 30.978,54.202C31.375,54.178 31.772,54.151 32.168,54.12C30.629,53.188 29.16,52.095 27.918,50.864C25.594,48.56 24.067,45.773 24.334,42.655C24.73,37.965 26.961,33.536 30.095,29.586C34.696,23.789 41.239,19.022 46.703,15.969L46.818,15.905ZM14.564,37.879C13.614,39.326 12.821,40.829 12.342,42.378C11.549,44.944 11.631,47.636 13.323,50.402C14.034,51.563 14.998,52.281 16.092,52.754C17.782,53.484 19.778,53.638 21.664,53.899C22.246,53.98 22.826,54.047 23.402,54.102C18.994,51.078 15.772,46.495 14.788,40.328C14.653,39.483 14.58,38.667 14.564,37.879ZM130.013,12.014C125.867,10.743 121.609,9.818 117.524,9.001C111.036,7.707 104.533,6.442 97.972,5.751C93.608,5.291 89.219,5.085 84.791,5.295C78.143,5.609 71.571,6.749 65.215,8.623C60.743,9.942 56.378,11.623 52.169,13.635C57.18,12.428 62.178,11.564 66.866,10.903C70.264,10.424 73.596,9.896 76.956,9.712C79.211,9.589 81.478,9.62 83.785,9.92C84.615,10.028 86.383,10.096 87.596,10.594C88.321,10.892 88.856,11.348 89.053,11.969C89.142,12.25 88.985,12.551 88.704,12.639C88.422,12.728 88.122,12.571 88.033,12.29C87.965,12.072 87.797,11.911 87.585,11.775C87.347,11.623 87.055,11.508 86.74,11.415C85.656,11.094 84.321,11.04 83.648,10.948C81.406,10.642 79.201,10.6 77.008,10.707C73.674,10.87 70.366,11.375 66.994,11.83C61.195,12.612 54.916,13.701 48.729,15.37C48.123,15.692 47.52,16.021 46.921,16.358C41.508,19.395 35.027,24.131 30.476,29.887C27.412,33.763 25.223,38.101 24.844,42.697C24.604,45.661 26.089,48.291 28.307,50.469C29.714,51.851 31.417,53.05 33.175,54.035C37.053,53.68 40.915,53.033 44.918,52.465C47.15,52.146 49.389,51.903 51.63,51.696C56.854,51.214 62.092,50.927 67.306,50.331C78.28,49.073 89.368,47.809 100.361,46.093C107.693,44.948 114.982,43.602 122.169,41.923C126.787,40.843 134.443,39.224 139.562,35.691C143.034,33.295 145.331,30.012 144.632,25.392C144.048,21.531 141.576,18.592 138.342,16.296C135.851,14.529 132.91,13.141 130.013,12.014ZM126.068,51.583C126.11,51.596 126.159,51.604 126.217,51.604C126.165,51.604 126.115,51.597 126.068,51.583ZM125.515,10.421C124.47,10.079 123.47,9.767 122.544,9.476C121.287,9.082 120.04,8.717 118.783,8.384C117.528,8.051 116.265,7.752 114.974,7.488C109.736,6.416 104.503,5.488 99.237,4.896C93.98,4.305 88.69,4.047 83.33,4.311C75.122,4.717 66.944,6.267 58.963,8.555C50.969,10.846 43.173,13.877 35.745,17.237C29.868,19.895 23.004,23.054 18.872,27.911C16.972,30.145 15.656,32.741 15.297,35.817C16.442,34.272 17.697,32.799 18.861,31.416C23.4,26.022 29.413,22.017 36.056,19.007C40.553,16.97 45.338,15.388 50.15,14.139C54.944,11.725 59.952,9.74 65.1,8.231C71.489,6.359 78.094,5.221 84.774,4.916C89.221,4.712 93.628,4.925 98.01,5.392C104.581,6.093 111.093,7.367 117.59,8.67C120.187,9.189 122.853,9.754 125.515,10.421Z" />
                          </svg>
                          <p className="font-medium font-semibold text-base text-gray-900 text-center uppercase">{bowl.name}</p>
                          <p className="mt-1 text-sm text-gray-600 text-center">{bowl.description ? "(" + bowl.description + ")" : ""}</p>
                        </label>
                      </div>
                    )
                  })
                }
                <div className="flex w-full h-full outline flex-row gap-x-3 p-3 justify-center items-center"></div>
              </div>
            </fieldset>
          </div>


          <div id="options">
            <div className="grid grid-cols-[25px_1fr] grid-rows-3 border-2 border-black justify-items-center items-center">
              <div className="flex row-span-3 w-full h-full bg-black outline-black justify-items-center items-center">
                <h2 className="vertical text-xs tracking-tighter uppercase font-semibold m-1 text-white">Soup Settings</h2>
              </div>
              <fieldset id="sauce" className="w-full h-full grid grid-cols-[70px_1fr]">
                <div className="flex w-full h-full outline justify-center items-center p-3">
                  <legend className="sr-only">Sauce</legend>
                  <h3 className="text-sm text-gray-600">Sauce</h3>
                </div>
                <div className="flex flex-wrap gap-3 outline justify-around items-center p-3">
                  {
                    sauceList.map((sauce) => {
                      return (
                        <div key={sauce.value} className="radio flex flex-row items-center">
                          <input
                            id={sauce.id}
                            value={sauce.id}
                            name="sauce"
                            type="radio"
                          // className="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600"
                          />
                          <label htmlFor={sauce.id} className="relative text-base font-medium leading-6 text-gray-900 cursor-pointer">
                            <svg className="circle small-circle" viewBox="0 0 100 64">
                              <path fill="none" stroke="#e2231b" strokeMiterlimit="10" d="M87.121,34.489C87.074,33.893 86.963,33.307 86.806,32.731C86.395,31.22 85.673,29.771 85.015,28.351C84.501,27.243 83.969,26.172 83.387,25.13C82.802,24.084 82.167,23.069 81.446,22.075C80.332,20.538 79.086,19.112 77.706,17.832C76.325,16.552 74.81,15.419 73.156,14.468C71.133,13.305 68.96,12.529 66.719,12.01C64.488,11.494 62.19,11.231 59.907,11.089C55.585,10.822 51.158,11.21 46.826,12.099C45.976,12.273 45.129,12.467 44.286,12.68C39.681,12.97 35.056,13.961 30.764,15.718C26.195,17.588 22.003,20.325 18.615,24.012C16.085,26.76 13.836,30.093 13.369,33.537C13.055,35.857 13.538,38.23 15.292,40.52C15.376,40.631 15.462,40.741 15.549,40.85C15.987,42.124 16.562,43.359 17.138,44.533C18.027,46.346 18.985,48.247 20.2,49.931C21.017,51.064 21.951,52.099 23.058,52.944C24.148,53.778 25.427,54.366 26.78,54.791C28.78,55.419 30.943,55.689 32.899,55.857C36.65,56.183 40.421,56.014 44.174,55.553C49.777,54.864 55.342,53.523 60.745,52.198C62.444,51.782 64.135,51.32 65.812,50.816C67.49,50.311 69.154,49.762 70.802,49.174C73.241,48.3 75.714,47.086 78.006,45.602C79.915,44.365 81.699,42.941 83.239,41.379C84.043,40.794 84.817,40.147 85.457,39.416C86.179,38.592 86.733,37.661 86.985,36.593C87.067,36.446 87.146,36.298 87.222,36.149C87.749,35.112 88.136,34 88.319,32.775C88.495,31.604 88.498,30.426 88.396,29.253C88.244,27.522 87.862,25.8 87.469,24.123C87.22,23.057 86.922,21.993 86.554,20.956C86.183,19.913 85.739,18.896 85.202,17.931C84.156,16.053 82.776,14.407 81.184,12.982C79.604,11.568 77.815,10.373 75.943,9.388C71.513,7.06 66.75,5.893 61.885,5.566C57.066,5.242 52.147,5.742 47.357,6.749C45.683,7.101 44.02,7.461 42.365,7.865C41.261,8.135 40.16,8.424 39.063,8.744C37.514,9.196 35.951,9.699 34.407,10.253C32.862,10.807 31.335,11.412 29.857,12.067C28.9,12.492 27.961,12.951 27.03,13.425C24.869,14.527 22.754,15.716 20.564,16.76C19.102,17.457 17.565,17.96 16.085,18.599C15.441,18.878 14.807,19.181 14.194,19.536C13.724,19.808 13.251,20.116 12.786,20.444C12.097,20.928 11.425,21.453 10.803,21.962C10.598,22.13 10.363,22.328 10.204,22.556C10.07,22.746 9.986,22.957 9.986,23.187C9.986,23.334 10.105,23.453 10.252,23.453C10.398,23.453 10.517,23.334 10.517,23.187C10.517,23.067 10.569,22.96 10.638,22.861C10.771,22.672 10.969,22.512 11.139,22.373C11.651,21.955 12.198,21.526 12.76,21.119C13.319,20.714 13.894,20.331 14.463,20.004C15.059,19.661 15.675,19.369 16.3,19.1C17.789,18.462 19.333,17.96 20.803,17.264C23.001,16.224 25.124,15.039 27.292,13.941C28.215,13.473 29.146,13.022 30.095,12.604C31.561,11.958 33.076,11.363 34.608,10.818C36.143,10.272 37.695,9.777 39.234,9.333C40.323,9.019 41.416,8.734 42.512,8.47C44.161,8.072 45.819,7.717 47.487,7.371C52.221,6.388 57.08,5.904 61.84,6.234C66.609,6.565 71.278,7.716 75.616,10.008C77.436,10.969 79.174,12.134 80.708,13.513C82.237,14.887 83.564,16.474 84.567,18.284C85.083,19.215 85.507,20.195 85.863,21.201C86.221,22.213 86.51,23.251 86.752,24.29C87.134,25.934 87.509,27.621 87.655,29.317C87.751,30.432 87.748,31.551 87.58,32.664C87.483,33.304 87.327,33.91 87.121,34.489ZM16.106,41.525C16.49,42.517 16.942,43.481 17.394,44.407C18.276,46.207 19.224,48.095 20.43,49.764C21.232,50.874 22.148,51.887 23.233,52.713C24.3,53.522 25.549,54.091 26.872,54.498C28.852,55.107 30.994,55.353 32.928,55.505C36.654,55.794 40.395,55.593 44.117,55.102C49.694,54.366 55.226,52.978 60.598,51.61C62.283,51.18 63.958,50.706 65.621,50.19C67.283,49.674 68.933,49.117 70.565,48.519C72.949,47.649 75.36,46.44 77.6,44.978C77.831,44.827 78.061,44.673 78.289,44.516C76.085,45.785 73.861,46.891 71.565,47.808C68.334,49.098 64.962,50.014 61.304,50.482C57.649,50.951 53.886,51.25 50.117,51.378C46.348,51.507 42.573,51.466 38.895,51.254C36.556,51.12 34.256,50.771 32.002,50.23C29.749,49.689 27.542,48.956 25.385,48.053C24.164,47.542 22.979,46.955 21.846,46.282C20.711,45.609 19.627,44.85 18.609,43.997C17.987,43.477 17.404,42.929 16.853,42.351C16.597,42.082 16.348,41.807 16.106,41.525ZM86.578,35.756C86.671,34.764 86.541,33.806 86.287,32.872C85.885,31.39 85.174,29.969 84.53,28.575C84.023,27.479 83.499,26.418 82.925,25.387C82.353,24.358 81.73,23.359 81.024,22.381C79.932,20.869 78.712,19.465 77.359,18.206C76.009,16.948 74.527,15.833 72.909,14.897C70.931,13.752 68.804,12.989 66.611,12.474C64.407,11.957 62.135,11.69 59.878,11.544C55.594,11.265 51.206,11.638 46.909,12.506C46.77,12.534 46.63,12.563 46.49,12.593C47.882,12.569 49.287,12.609 50.684,12.729C52.528,12.888 54.358,13.189 56.124,13.674C57.166,13.96 57.955,14.168 58.696,14.567C59.197,14.837 59.677,15.193 60.192,15.718C60.384,15.916 60.379,16.233 60.181,16.425C59.983,16.617 59.666,16.612 59.474,16.414C59.045,15.968 58.646,15.661 58.225,15.429C57.548,15.056 56.821,14.867 55.866,14.595C54.159,14.107 52.388,13.799 50.602,13.627C48.808,13.455 46.998,13.419 45.22,13.479C44.18,13.514 43.137,13.585 42.096,13.693C39.479,14.453 36.926,15.384 34.486,16.447C33.801,16.746 33.14,17.083 32.49,17.441C31.51,17.982 30.557,18.57 29.589,19.146C25.824,21.386 21.258,24.368 18.26,28.196C16.246,30.768 14.941,33.722 15.077,37.09C15.119,38.111 15.321,39.123 15.618,40.113L15.635,40.168L15.678,40.225C16.159,40.854 16.666,41.45 17.205,42.015C17.744,42.58 18.314,43.115 18.921,43.624C19.92,44.46 20.982,45.203 22.094,45.863C23.208,46.523 24.373,47.1 25.574,47.602C27.707,48.492 29.89,49.215 32.117,49.748C34.343,50.281 36.614,50.624 38.923,50.755C42.587,50.963 46.346,51.001 50.099,50.87C53.852,50.739 57.599,50.438 61.238,49.968C64.85,49.502 68.18,48.595 71.369,47.318C74.563,46.04 77.616,44.392 80.672,42.446C81.042,42.21 81.428,41.965 81.819,41.709C82.446,41.129 83.039,40.526 83.592,39.904C84.738,38.613 85.796,37.291 86.552,35.807L86.578,35.756ZM39.81,13.99C36.808,14.461 33.847,15.248 31.027,16.371C26.528,18.164 22.391,20.813 19.035,24.401C16.56,27.052 14.328,30.263 13.861,33.605C13.591,35.536 13.917,37.508 15.127,39.432C14.937,38.664 14.812,37.886 14.779,37.102C14.631,33.659 15.954,30.633 18.007,27.998C21.021,24.13 25.613,21.105 29.404,18.835C30.374,18.254 31.329,17.662 32.311,17.116C32.969,16.751 33.64,16.407 34.335,16.102C36.106,15.324 37.937,14.615 39.81,13.99Z" />
                            </svg>

                            {sauce.name}
                          </label>
                        </div>

                      )
                    })
                  }

                </div>
              </fieldset>

              <fieldset id="size" className="w-full h-full grid grid-cols-[70px_1fr]">
                <div className="flex w-full h-full outline justify-center items-center p-3">
                  <legend className="sr-only">Size</legend>
                  <h3 className="text-sm text-gray-600">Size</h3>
                </div>
                <div className="flex flex-wrap gap-3 outline justify-around items-center p-3">
                  {
                    sizeList.map((size) => {
                      return (
                        <div key={size.value} className="radio flex flex-row items-center">
                          <input
                            id={size.id}
                            name="size"
                            value={size.id}
                            type="radio"
                          // className="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600"
                          />
                          <label htmlFor={size.id} className="relative text-base font-medium leading-6 text-gray-900 cursor-pointer">
                            <svg className="circle small-circle" viewBox="0 0 100 64">
                              <path fill="none" stroke="#e2231b" strokeMiterlimit="10" d="M87.121,34.489C87.074,33.893 86.963,33.307 86.806,32.731C86.395,31.22 85.673,29.771 85.015,28.351C84.501,27.243 83.969,26.172 83.387,25.13C82.802,24.084 82.167,23.069 81.446,22.075C80.332,20.538 79.086,19.112 77.706,17.832C76.325,16.552 74.81,15.419 73.156,14.468C71.133,13.305 68.96,12.529 66.719,12.01C64.488,11.494 62.19,11.231 59.907,11.089C55.585,10.822 51.158,11.21 46.826,12.099C45.976,12.273 45.129,12.467 44.286,12.68C39.681,12.97 35.056,13.961 30.764,15.718C26.195,17.588 22.003,20.325 18.615,24.012C16.085,26.76 13.836,30.093 13.369,33.537C13.055,35.857 13.538,38.23 15.292,40.52C15.376,40.631 15.462,40.741 15.549,40.85C15.987,42.124 16.562,43.359 17.138,44.533C18.027,46.346 18.985,48.247 20.2,49.931C21.017,51.064 21.951,52.099 23.058,52.944C24.148,53.778 25.427,54.366 26.78,54.791C28.78,55.419 30.943,55.689 32.899,55.857C36.65,56.183 40.421,56.014 44.174,55.553C49.777,54.864 55.342,53.523 60.745,52.198C62.444,51.782 64.135,51.32 65.812,50.816C67.49,50.311 69.154,49.762 70.802,49.174C73.241,48.3 75.714,47.086 78.006,45.602C79.915,44.365 81.699,42.941 83.239,41.379C84.043,40.794 84.817,40.147 85.457,39.416C86.179,38.592 86.733,37.661 86.985,36.593C87.067,36.446 87.146,36.298 87.222,36.149C87.749,35.112 88.136,34 88.319,32.775C88.495,31.604 88.498,30.426 88.396,29.253C88.244,27.522 87.862,25.8 87.469,24.123C87.22,23.057 86.922,21.993 86.554,20.956C86.183,19.913 85.739,18.896 85.202,17.931C84.156,16.053 82.776,14.407 81.184,12.982C79.604,11.568 77.815,10.373 75.943,9.388C71.513,7.06 66.75,5.893 61.885,5.566C57.066,5.242 52.147,5.742 47.357,6.749C45.683,7.101 44.02,7.461 42.365,7.865C41.261,8.135 40.16,8.424 39.063,8.744C37.514,9.196 35.951,9.699 34.407,10.253C32.862,10.807 31.335,11.412 29.857,12.067C28.9,12.492 27.961,12.951 27.03,13.425C24.869,14.527 22.754,15.716 20.564,16.76C19.102,17.457 17.565,17.96 16.085,18.599C15.441,18.878 14.807,19.181 14.194,19.536C13.724,19.808 13.251,20.116 12.786,20.444C12.097,20.928 11.425,21.453 10.803,21.962C10.598,22.13 10.363,22.328 10.204,22.556C10.07,22.746 9.986,22.957 9.986,23.187C9.986,23.334 10.105,23.453 10.252,23.453C10.398,23.453 10.517,23.334 10.517,23.187C10.517,23.067 10.569,22.96 10.638,22.861C10.771,22.672 10.969,22.512 11.139,22.373C11.651,21.955 12.198,21.526 12.76,21.119C13.319,20.714 13.894,20.331 14.463,20.004C15.059,19.661 15.675,19.369 16.3,19.1C17.789,18.462 19.333,17.96 20.803,17.264C23.001,16.224 25.124,15.039 27.292,13.941C28.215,13.473 29.146,13.022 30.095,12.604C31.561,11.958 33.076,11.363 34.608,10.818C36.143,10.272 37.695,9.777 39.234,9.333C40.323,9.019 41.416,8.734 42.512,8.47C44.161,8.072 45.819,7.717 47.487,7.371C52.221,6.388 57.08,5.904 61.84,6.234C66.609,6.565 71.278,7.716 75.616,10.008C77.436,10.969 79.174,12.134 80.708,13.513C82.237,14.887 83.564,16.474 84.567,18.284C85.083,19.215 85.507,20.195 85.863,21.201C86.221,22.213 86.51,23.251 86.752,24.29C87.134,25.934 87.509,27.621 87.655,29.317C87.751,30.432 87.748,31.551 87.58,32.664C87.483,33.304 87.327,33.91 87.121,34.489ZM16.106,41.525C16.49,42.517 16.942,43.481 17.394,44.407C18.276,46.207 19.224,48.095 20.43,49.764C21.232,50.874 22.148,51.887 23.233,52.713C24.3,53.522 25.549,54.091 26.872,54.498C28.852,55.107 30.994,55.353 32.928,55.505C36.654,55.794 40.395,55.593 44.117,55.102C49.694,54.366 55.226,52.978 60.598,51.61C62.283,51.18 63.958,50.706 65.621,50.19C67.283,49.674 68.933,49.117 70.565,48.519C72.949,47.649 75.36,46.44 77.6,44.978C77.831,44.827 78.061,44.673 78.289,44.516C76.085,45.785 73.861,46.891 71.565,47.808C68.334,49.098 64.962,50.014 61.304,50.482C57.649,50.951 53.886,51.25 50.117,51.378C46.348,51.507 42.573,51.466 38.895,51.254C36.556,51.12 34.256,50.771 32.002,50.23C29.749,49.689 27.542,48.956 25.385,48.053C24.164,47.542 22.979,46.955 21.846,46.282C20.711,45.609 19.627,44.85 18.609,43.997C17.987,43.477 17.404,42.929 16.853,42.351C16.597,42.082 16.348,41.807 16.106,41.525ZM86.578,35.756C86.671,34.764 86.541,33.806 86.287,32.872C85.885,31.39 85.174,29.969 84.53,28.575C84.023,27.479 83.499,26.418 82.925,25.387C82.353,24.358 81.73,23.359 81.024,22.381C79.932,20.869 78.712,19.465 77.359,18.206C76.009,16.948 74.527,15.833 72.909,14.897C70.931,13.752 68.804,12.989 66.611,12.474C64.407,11.957 62.135,11.69 59.878,11.544C55.594,11.265 51.206,11.638 46.909,12.506C46.77,12.534 46.63,12.563 46.49,12.593C47.882,12.569 49.287,12.609 50.684,12.729C52.528,12.888 54.358,13.189 56.124,13.674C57.166,13.96 57.955,14.168 58.696,14.567C59.197,14.837 59.677,15.193 60.192,15.718C60.384,15.916 60.379,16.233 60.181,16.425C59.983,16.617 59.666,16.612 59.474,16.414C59.045,15.968 58.646,15.661 58.225,15.429C57.548,15.056 56.821,14.867 55.866,14.595C54.159,14.107 52.388,13.799 50.602,13.627C48.808,13.455 46.998,13.419 45.22,13.479C44.18,13.514 43.137,13.585 42.096,13.693C39.479,14.453 36.926,15.384 34.486,16.447C33.801,16.746 33.14,17.083 32.49,17.441C31.51,17.982 30.557,18.57 29.589,19.146C25.824,21.386 21.258,24.368 18.26,28.196C16.246,30.768 14.941,33.722 15.077,37.09C15.119,38.111 15.321,39.123 15.618,40.113L15.635,40.168L15.678,40.225C16.159,40.854 16.666,41.45 17.205,42.015C17.744,42.58 18.314,43.115 18.921,43.624C19.92,44.46 20.982,45.203 22.094,45.863C23.208,46.523 24.373,47.1 25.574,47.602C27.707,48.492 29.89,49.215 32.117,49.748C34.343,50.281 36.614,50.624 38.923,50.755C42.587,50.963 46.346,51.001 50.099,50.87C53.852,50.739 57.599,50.438 61.238,49.968C64.85,49.502 68.18,48.595 71.369,47.318C74.563,46.04 77.616,44.392 80.672,42.446C81.042,42.21 81.428,41.965 81.819,41.709C82.446,41.129 83.039,40.526 83.592,39.904C84.738,38.613 85.796,37.291 86.552,35.807L86.578,35.756ZM39.81,13.99C36.808,14.461 33.847,15.248 31.027,16.371C26.528,18.164 22.391,20.813 19.035,24.401C16.56,27.052 14.328,30.263 13.861,33.605C13.591,35.536 13.917,37.508 15.127,39.432C14.937,38.664 14.812,37.886 14.779,37.102C14.631,33.659 15.954,30.633 18.007,27.998C21.021,24.13 25.613,21.105 29.404,18.835C30.374,18.254 31.329,17.662 32.311,17.116C32.969,16.751 33.64,16.407 34.335,16.102C36.106,15.324 37.937,14.615 39.81,13.99Z" />
                            </svg>
                            {size.name}
                          </label>
                        </div>
                      )
                    })
                  }
                </div>
              </fieldset>
              <fieldset id="egg-section" className="w-full h-full grid grid-cols-[70px_1fr]">
                <div className="flex w-full h-full outline justify-center items-center p-3">
                  <legend className="sr-only">Egg?</legend>
                  <h3 className="text-sm text-gray-600">Egg?</h3>
                </div>
                <div className="checkbox flex flex-wrap w-full h-full gap-3 outline justify-center place-items-center p-3 pl-7">
                  <input
                    id="egg"
                    name="egg"
                    type="checkbox"
                  // className="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600"
                  />
                  <label htmlFor="egg" className="text-base font-medium text-gray-900 cursor-pointer">
                    <svg id="checkbox_empty" viewBox="0 0 33.18 33.34">
                      <path fill="none" stroke="#000" strokeMiterlimit="10" d="M 3 3 H 30 V 30 H 3 Z" />
                    </svg>
                    <svg className="checkmark" viewBox="0 0 37.92 33.3" preserveAspectRatio="none">
                      <path fill="none" stroke="#e2231b" strokeMiterlimit="10" d="M.59 19.57c1.41.11 2.74 1.49 3.93 2.22 1.96 1.22 4.34 1.97 6.16 3.29 1.94 1.41 3.17 3.68 5.03 5.09-1.01-1.05-2.52-1.47-3.7-2.3-2.15-1.5-4.06-2.99-6.49-4.1-1.46-.67-6.06-1.54-4.8-4.07 1.76-.33 5.43 3.09 6.68 4.15 1.47 1.24 2.42 2.87 3.98 4 2.01 1.45 2.09 1.24 3.97-.52 1.43-1.34 2.28-2.68 3.24-4.25 1.04-1.71 2.62-3.12 3.79-4.72.31-.42.64-1.52.93-2 .87-1.48 2.1-2.58 3.3-3.77 2.23-2.22 4.27-4.42 6.27-6.8.59-.7 1.46-1.2 2-1.93.58-.77.73-1.66 1.33-2.42C33 3 31.46 7.7 29.34 10.35c-1.99 2.48-4.31 4.87-5.75 7.71-2.38 4.67-5.6 10.27-9.65 13.43.83-1.6 2.49-2.55 3.65-3.87 1.51-1.72 2.8-3.72 4.22-5.52 1.87-2.37 3.39-4.85 4.96-7.23 1.27-1.94 3.29-4.64 5.02-6.3 1.25-1.19 2.15-1.5 3.07-3 .61-.99.87-1.86 1.83-2.6-4.07 4.06-7.78 8.84-11.07 13.55-2.11 3.02-4.17 6.06-6.3 9.07-1 1.42-3.02 5.22-4.37 5.89.89-1.76 2.86-2.94 4.07-4.49 2.66-3.42 4.5-7.43 7.04-10.94 1.59-1.98 3.18-3.97 4.77-5.96.41-.84.74-1.72 1-2.62.72-1.07 1.95-1.79 2.76-2.91" />
                    </svg>
                    <p className="text-base">Yes</p>
                  </label>
                </div>
              </fieldset>
            </div>
          </div>

          <div id="veggies" className="">
            <fieldset>
              <legend className="sr-only">Vegetables -- Select up to 3.</legend>
              <div className="grid grid-cols-[25px_1fr] grid-rows-1 border-2 border-black justify-items-center items-center">
                <div className="flex w-full h-full outline justify-items-center items-center">
                  <h2 className="vertical text-xs tracking-tighter uppercase font-semibold m-1">Vegetables * 3 max</h2>
                </div>
                <div className="flex flex-col w-full h-full outline sm:flex-wrap sm:flex-row">
                  {
                    veggieList.map((veggie) => {
                      return (
                        <div key={veggie.id} className="checkbox flex flex-row sm:basis-6/12 p-3">
                          <div className="flex place-items-center pl-7 w-full h-full">
                            <input
                              id={veggie.id}
                              name={veggie.id}
                              type="checkbox"
                            //className="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-600"
                            />
                            <label htmlFor={veggie.id} className="font-medium text-gray-900 cursor-pointer">
                              <svg id="checkbox_empty" viewBox="0 0 33.18 33.34">
                                <path fill="none" stroke="#000" strokeMiterlimit="10" d="M 3 3 H 30 V 30 H 3 Z" />
                              </svg>
                              <svg className="checkmark" viewBox="0 0 37.92 33.3" preserveAspectRatio="none">
                                <path fill="none" stroke="#e2231b" strokeMiterlimit="10" d="M.59 19.57c1.41.11 2.74 1.49 3.93 2.22 1.96 1.22 4.34 1.97 6.16 3.29 1.94 1.41 3.17 3.68 5.03 5.09-1.01-1.05-2.52-1.47-3.7-2.3-2.15-1.5-4.06-2.99-6.49-4.1-1.46-.67-6.06-1.54-4.8-4.07 1.76-.33 5.43 3.09 6.68 4.15 1.47 1.24 2.42 2.87 3.98 4 2.01 1.45 2.09 1.24 3.97-.52 1.43-1.34 2.28-2.68 3.24-4.25 1.04-1.71 2.62-3.12 3.79-4.72.31-.42.64-1.52.93-2 .87-1.48 2.1-2.58 3.3-3.77 2.23-2.22 4.27-4.42 6.27-6.8.59-.7 1.46-1.2 2-1.93.58-.77.73-1.66 1.33-2.42C33 3 31.46 7.7 29.34 10.35c-1.99 2.48-4.31 4.87-5.75 7.71-2.38 4.67-5.6 10.27-9.65 13.43.83-1.6 2.49-2.55 3.65-3.87 1.51-1.72 2.8-3.72 4.22-5.52 1.87-2.37 3.39-4.85 4.96-7.23 1.27-1.94 3.29-4.64 5.02-6.3 1.25-1.19 2.15-1.5 3.07-3 .61-.99.87-1.86 1.83-2.6-4.07 4.06-7.78 8.84-11.07 13.55-2.11 3.02-4.17 6.06-6.3 9.07-1 1.42-3.02 5.22-4.37 5.89.89-1.76 2.86-2.94 4.07-4.49 2.66-3.42 4.5-7.43 7.04-10.94 1.59-1.98 3.18-3.97 4.77-5.96.41-.84.74-1.72 1-2.62.72-1.07 1.95-1.79 2.76-2.91" />
                              </svg>
                              <div className="grid grid-cols-2">
                                <img className="object-scale-down h-12 place-self-center"
                                  src={veggie.icon.src} alt={veggie.name + " icon"} />
                                <div>
                                  <p className="text-base font-medium text-gray-900">{veggie.name}</p>
                                  <p className="mt-1 text-sm text-gray-600">({veggie.description})</p>
                                </div>
                              </div>
                            </label>
                          </div>
                        </div>
                      )
                    })
                  }
                </div>
              </div>
            </fieldset>
          </div>

          <div id="contact" className="grid grid-cols-[25px_50px_1fr] grid-rows-2 border-2 border-black justify-items-center items-center">
            <div className="row-span-2 w-full h-full outline outline-black bg-black justify-items-center items-center">
              <h2 className="vertical text-xs tracking-tighter uppercase text-white font-semibold m-1">Contact</h2>
            </div>
            <div className="flex w-full h-full outline justify-center items-center">
              <label htmlFor="name" className="block text-sm font-medium leading-6 text-gray-900">
                Name
              </label>
            </div>
            <div className="flex w-full h-full outline justify-center items-center">
              <input
                id="name"
                name="name"
                className="block w-full h-full outline outline-black border-black focus:outline-black focus:outline-black focus:outline-offset-0 text-sm sm:text-base text-red font-handwritten"
              />
            </div>
            <div className="flex w-full h-full outline justify-center items-center">
              <label htmlFor="email" className="block text-sm font-medium leading-6 text-gray-900">
                Email
              </label>
            </div>
            <div className="flex w-full h-full outline justify-center items-center">
              <input
                id="email"
                name="email"
                type="email"
                autoComplete="email"
                className="block w-full h-full outline outline-black bg-transparent border-black text-sm sm:text-base text-red font-handwritten"
              />
            </div>
          </div>
        </div>

<div className="my-12 flex flex-col gap-2 items-center justify-center gap-x-6">
          {
            errorText && <p className="text-red">{errorText}</p>
          }
          <button
            type="submit"
            className="inline-flex justify-center rounded-md outline text-white bg-red outline-red sm:bg-white sm:text-red px-3 py-2 text-sm font-semibold shadow-sm hover:bg-red hover:text-white focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-red"
          >
            {loading ? "Loading..." : "Place Order!"}
          </button>
        </div>
      </form >
      
    ) : (
      <div><h1 className='text-2xl'> Sorry, we're not accepting any more orders.</h1></div>
    )}
    </div>
  )
}


